image: docker:latest

variables:
  IMAGE_BASE: "$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
  DOCKER_BUILDKIT: 1

stages:
  - prep
  - build
  - test
  - deliver
  - deploy

preparation:
  stage: prep
  tags:
    - dev
  script:
    - export BUILD_ID=$(date +%Y%m%d%H%M)
    - echo "BUILD_ID=${BUILD_ID}" > context.env

    - echo "API_PROD_IMAGE_NAME=${IMAGE_BASE}/api:prod-${BUILD_ID}"       >> context.env
    - echo "API_TEST_IMAGE_NAME=${IMAGE_BASE}/api:test-${BUILD_ID}"       >> context.env

    - echo "DOCKER_HUB_API_IMAGE=$DOCKER_HUB_USER/testing-app-api:${BUILD_ID}"         >> context.env
  artifacts: 
    paths: 
      - context.env

build-api:
  stage: build
  tags:
    - dev
  script:
    - export $(cat context.env | xargs)

    - docker build testing-app -f testing-app/Dockerfile -t ${API_PROD_IMAGE_NAME}
    - docker build testing-app -f testing-app/Dockerfile -t ${API_TEST_IMAGE_NAME}

    - docker login -u $CI_REGISTRY_USER --password $CI_JOB_TOKEN $CI_REGISTRY

    - docker push ${API_PROD_IMAGE_NAME}
    - docker push ${API_TEST_IMAGE_NAME}
  needs:
    - job: preparation
      artifacts: true

test-api:
  stage: test
  tags:
    - dev
  script:
    - export $(cat context.env | xargs)

    - export API_IMAGE=$API_TEST_IMAGE_NAME
    - export FLASK_ENV=testing

    - docker login -u $CI_REGISTRY_USER --password $CI_JOB_TOKEN $CI_REGISTRY

    - docker compose -f docker-compose.yml --env-file .env.dev --profile all pull
    - docker compose -f docker-compose.yml --env-file .env.dev --profile test_db rm -fsv
    - docker compose -f docker-compose.yml --env-file .env.dev --profile test_db --profile test_api up -d --wait
    - docker compose -f docker-compose.yml --env-file .env.dev run test_runner
    - docker compose -f docker-compose.yml --env-file .env.dev --profile test_db --profile test_api rm -fsv
  needs:
    - job: preparation
    - job: build-api
      artifacts: true

deliver-dockerhub:
  stage: deliver
  tags:
    - dev
  script:
    - export $(cat context.env | xargs)

    - docker login -u $CI_REGISTRY_USER --password $CI_JOB_TOKEN $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USER --password $DOCKER_HUB_PASS

    - docker tag $API_PROD_IMAGE_NAME $DOCKER_HUB_API_IMAGE

    - docker push $DOCKER_HUB_API_IMAGE
  needs:
    - job: test-api
    - job: preparation
      artifacts: true  

deploy-prod:
  stage: deploy
  tags: 
    - prod
  script:
    - export $(cat context.env | xargs)

    - export API_IMAGE=$DOCKER_HUB_API_IMAGE
    - export FLASK_ENV=prod

    - docker login -u $DOCKER_HUB_USER --password $DOCKER_HUB_PASS

    - docker compose -f docker-compose.yml --profile app --env-file .env.prod pull
    - docker compose -f docker-compose.yml --profile app --env-file .env.prod up -d
  needs:
    - job: deliver-dockerhub
    - job: preparation
      artifacts: true
